// Code generated by mockery v2.43.2. DO NOT EDIT.

package mocks

import mock "github.com/stretchr/testify/mock"

// APIKeyStore is an autogenerated mock type for the APIKeyStore type
type APIKeyStore struct {
	mock.Mock
}

// AddAPIKey provides a mock function with given fields: apiKey, streamID
func (_m *APIKeyStore) AddAPIKey(apiKey string, streamID string) {
	_m.Called(apiKey, streamID)
}

// GetStreamID provides a mock function with given fields: apiKey
func (_m *APIKeyStore) GetStreamID(apiKey string) (string, bool) {
	ret := _m.Called(apiKey)

	if len(ret) == 0 {
		panic("no return value specified for GetStreamID")
	}

	var r0 string
	var r1 bool
	if rf, ok := ret.Get(0).(func(string) (string, bool)); ok {
		return rf(apiKey)
	}
	if rf, ok := ret.Get(0).(func(string) string); ok {
		r0 = rf(apiKey)
	} else {
		r0 = ret.Get(0).(string)
	}

	if rf, ok := ret.Get(1).(func(string) bool); ok {
		r1 = rf(apiKey)
	} else {
		r1 = ret.Get(1).(bool)
	}

	return r0, r1
}

// IsValidAPIKey provides a mock function with given fields: apiKey
func (_m *APIKeyStore) IsValidAPIKey(apiKey string) bool {
	ret := _m.Called(apiKey)

	if len(ret) == 0 {
		panic("no return value specified for IsValidAPIKey")
	}

	var r0 bool
	if rf, ok := ret.Get(0).(func(string) bool); ok {
		r0 = rf(apiKey)
	} else {
		r0 = ret.Get(0).(bool)
	}

	return r0
}

// NewAPIKeyStore creates a new instance of APIKeyStore. It also registers a testing interface on the mock and a cleanup function to assert the mocks expectations.
// The first argument is typically a *testing.T value.
func NewAPIKeyStore(t interface {
	mock.TestingT
	Cleanup(func())
}) *APIKeyStore {
	mock := &APIKeyStore{}
	mock.Mock.Test(t)

	t.Cleanup(func() { mock.AssertExpectations(t) })

	return mock
}
